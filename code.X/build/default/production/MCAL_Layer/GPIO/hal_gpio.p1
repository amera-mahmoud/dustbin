Version 4.0 HI-TECH Software Intermediate Code
"1325 C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877A.h
[v _TRISA `Vuc ~T0 @X0 0 e@133 ]
"1375
[v _TRISB `Vuc ~T0 @X0 0 e@134 ]
"1437
[v _TRISC `Vuc ~T0 @X0 0 e@135 ]
"1499
[v _TRISD `Vuc ~T0 @X0 0 e@136 ]
"1561
[v _TRISE `Vuc ~T0 @X0 0 e@137 ]
"166
[v _PORTA `Vuc ~T0 @X0 0 e@5 ]
"216
[v _PORTB `Vuc ~T0 @X0 0 e@6 ]
"278
[v _PORTC `Vuc ~T0 @X0 0 e@7 ]
"340
[v _PORTD `Vuc ~T0 @X0 0 e@8 ]
"402
[v _PORTE `Vuc ~T0 @X0 0 e@9 ]
"16 MCAL_Layer/GPIO/hal_gpio.h
[; ;MCAL_Layer/GPIO/hal_gpio.h: 16: {
[s S102 :3 `uc 1 :3 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S102 . port pin logic direction ]
"29 MCAL_Layer/GPIO/hal_gpio.c
[; ;MCAL_Layer/GPIO/hal_gpio.c: 29:         }
[c E1528 0 1 .. ]
[n E1528 . GPIO_DIRECTION_OUTPUT GPIO_DIRECTION_INPUT  ]
"49
[; ;MCAL_Layer/GPIO/hal_gpio.c: 49: std_ReturnType gpio_pin_write_logic(const pin_config_t* pin_config, logic_t logic)
[c E1524 0 1 .. ]
[n E1524 . GPIO_LOW GPIO_HIGH  ]
"124
[; ;MCAL_Layer/GPIO/hal_gpio.c: 124: std_ReturnType gpio_port_direction_initialize(port_index_t port, uint8 direction)
[c E1507 0 1 2 3 4 .. ]
[n E1507 . PORTA_INDEX PORTB_INDEX PORTC_INDEX PORTD_INDEX PORTE_INDEX  ]
"54 C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877A.h
[; <" INDF equ 00h ;# ">
"61
[; <" TMR0 equ 01h ;# ">
"68
[; <" PCL equ 02h ;# ">
"75
[; <" STATUS equ 03h ;# ">
"161
[; <" FSR equ 04h ;# ">
"168
[; <" PORTA equ 05h ;# ">
"218
[; <" PORTB equ 06h ;# ">
"280
[; <" PORTC equ 07h ;# ">
"342
[; <" PORTD equ 08h ;# ">
"404
[; <" PORTE equ 09h ;# ">
"436
[; <" PCLATH equ 0Ah ;# ">
"456
[; <" INTCON equ 0Bh ;# ">
"534
[; <" PIR1 equ 0Ch ;# ">
"596
[; <" PIR2 equ 0Dh ;# ">
"636
[; <" TMR1 equ 0Eh ;# ">
"643
[; <" TMR1L equ 0Eh ;# ">
"650
[; <" TMR1H equ 0Fh ;# ">
"657
[; <" T1CON equ 010h ;# ">
"732
[; <" TMR2 equ 011h ;# ">
"739
[; <" T2CON equ 012h ;# ">
"810
[; <" SSPBUF equ 013h ;# ">
"817
[; <" SSPCON equ 014h ;# ">
"887
[; <" CCPR1 equ 015h ;# ">
"894
[; <" CCPR1L equ 015h ;# ">
"901
[; <" CCPR1H equ 016h ;# ">
"908
[; <" CCP1CON equ 017h ;# ">
"966
[; <" RCSTA equ 018h ;# ">
"1061
[; <" TXREG equ 019h ;# ">
"1068
[; <" RCREG equ 01Ah ;# ">
"1075
[; <" CCPR2 equ 01Bh ;# ">
"1082
[; <" CCPR2L equ 01Bh ;# ">
"1089
[; <" CCPR2H equ 01Ch ;# ">
"1096
[; <" CCP2CON equ 01Dh ;# ">
"1154
[; <" ADRESH equ 01Eh ;# ">
"1161
[; <" ADCON0 equ 01Fh ;# ">
"1257
[; <" OPTION_REG equ 081h ;# ">
"1327
[; <" TRISA equ 085h ;# ">
"1377
[; <" TRISB equ 086h ;# ">
"1439
[; <" TRISC equ 087h ;# ">
"1501
[; <" TRISD equ 088h ;# ">
"1563
[; <" TRISE equ 089h ;# ">
"1620
[; <" PIE1 equ 08Ch ;# ">
"1682
[; <" PIE2 equ 08Dh ;# ">
"1722
[; <" PCON equ 08Eh ;# ">
"1756
[; <" SSPCON2 equ 091h ;# ">
"1818
[; <" PR2 equ 092h ;# ">
"1825
[; <" SSPADD equ 093h ;# ">
"1832
[; <" SSPSTAT equ 094h ;# ">
"2001
[; <" TXSTA equ 098h ;# ">
"2082
[; <" SPBRG equ 099h ;# ">
"2089
[; <" CMCON equ 09Ch ;# ">
"2159
[; <" CVRCON equ 09Dh ;# ">
"2224
[; <" ADRESL equ 09Eh ;# ">
"2231
[; <" ADCON1 equ 09Fh ;# ">
"2290
[; <" EEDATA equ 010Ch ;# ">
"2297
[; <" EEADR equ 010Dh ;# ">
"2304
[; <" EEDATH equ 010Eh ;# ">
"2311
[; <" EEADRH equ 010Fh ;# ">
"2318
[; <" EECON1 equ 018Ch ;# ">
"2363
[; <" EECON2 equ 018Dh ;# ">
"4 MCAL_Layer/GPIO/hal_gpio.c
[; ;MCAL_Layer/GPIO/hal_gpio.c: 4: static volatile uint8* tris_registers[] = {&TRISA, &TRISB, &TRISC, &TRISD, &TRISE};
[v _tris_registers `*Vuc ~T0 @X0 -> 5 `i s ]
[i _tris_registers
:U ..
&U _TRISA
&U _TRISB
&U _TRISC
&U _TRISD
&U _TRISE
..
]
"6
[; ;MCAL_Layer/GPIO/hal_gpio.c: 6: static volatile uint8* port_registers[] = {&PORTA, &PORTB, &PORTC, &PORTD, &PORTE};
[v _port_registers `*Vuc ~T0 @X0 -> 5 `i s ]
[i _port_registers
:U ..
&U _PORTA
&U _PORTB
&U _PORTC
&U _PORTD
&U _PORTE
..
]
"9
[; ;MCAL_Layer/GPIO/hal_gpio.c: 9: std_ReturnType gpio_pin_direction_initialize(const pin_config_t* pin_config) {
[v _gpio_pin_direction_initialize `(uc ~T0 @X0 1 ef1`*CS102 ]
{
[e :U _gpio_pin_direction_initialize ]
[v _pin_config `*CS102 ~T0 @X0 1 r1 ]
[f ]
"10
[; ;MCAL_Layer/GPIO/hal_gpio.c: 10:     std_ReturnType ret = (std_ReturnType)0X00;;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"11
[; ;MCAL_Layer/GPIO/hal_gpio.c: 11:     if ((((void*)0) == pin_config)|| (pin_config->pin > 8 -1))
[e $ ! || == -> -> -> 0 `i `*v `*CS102 _pin_config > -> . *U _pin_config 1 `i - -> 8 `i -> 1 `i 104  ]
"12
[; ;MCAL_Layer/GPIO/hal_gpio.c: 12:     {
{
"13
[; ;MCAL_Layer/GPIO/hal_gpio.c: 13:         ret = (std_ReturnType)0X00;;
[e = _ret -> -> 0 `i `uc ]
"14
[; ;MCAL_Layer/GPIO/hal_gpio.c: 14:     }
}
[e $U 105  ]
"15
[; ;MCAL_Layer/GPIO/hal_gpio.c: 15:     else
[e :U 104 ]
"16
[; ;MCAL_Layer/GPIO/hal_gpio.c: 16:     {
{
"17
[; ;MCAL_Layer/GPIO/hal_gpio.c: 17:         switch(pin_config->direction)
[e $U 107  ]
"18
[; ;MCAL_Layer/GPIO/hal_gpio.c: 18:         {
{
"19
[; ;MCAL_Layer/GPIO/hal_gpio.c: 19:              case GPIO_DIRECTION_OUTPUT:
[e :U 108 ]
"20
[; ;MCAL_Layer/GPIO/hal_gpio.c: 20:                  (*tris_registers[pin_config->port] &= ~((uint8)0x01 << pin_config->pin));
[e =& *U *U + &U _tris_registers * -> . *U _pin_config 0 `ux -> -> # *U &U _tris_registers `ui `ux -> ~ << -> -> -> 1 `i `uc `i -> . *U _pin_config 1 `i `uc ]
"21
[; ;MCAL_Layer/GPIO/hal_gpio.c: 21:                  ret = (std_ReturnType)0X01;;
[e = _ret -> -> 1 `i `uc ]
"22
[; ;MCAL_Layer/GPIO/hal_gpio.c: 22:                  break;
[e $U 106  ]
"23
[; ;MCAL_Layer/GPIO/hal_gpio.c: 23:              case GPIO_DIRECTION_INPUT:
[e :U 109 ]
"24
[; ;MCAL_Layer/GPIO/hal_gpio.c: 24:                  (*tris_registers[pin_config->port] |= ((uint8)0x01 << pin_config->pin));
[e =| *U *U + &U _tris_registers * -> . *U _pin_config 0 `ux -> -> # *U &U _tris_registers `ui `ux -> << -> -> -> 1 `i `uc `i -> . *U _pin_config 1 `i `uc ]
"25
[; ;MCAL_Layer/GPIO/hal_gpio.c: 25:                  ret = (std_ReturnType)0X01;;
[e = _ret -> -> 1 `i `uc ]
"26
[; ;MCAL_Layer/GPIO/hal_gpio.c: 26:                  break;
[e $U 106  ]
"27
[; ;MCAL_Layer/GPIO/hal_gpio.c: 27:             default:
[e :U 110 ]
"28
[; ;MCAL_Layer/GPIO/hal_gpio.c: 28:               ret = (std_ReturnType)0X00;;
[e = _ret -> -> 0 `i `uc ]
"29
[; ;MCAL_Layer/GPIO/hal_gpio.c: 29:         }
}
[e $U 106  ]
[e :U 107 ]
[e [\ -> . *U _pin_config 3 `i , $ . `E1528 0 108
 , $ . `E1528 1 109
 110 ]
[e :U 106 ]
"30
[; ;MCAL_Layer/GPIO/hal_gpio.c: 30:     }
}
[e :U 105 ]
"31
[; ;MCAL_Layer/GPIO/hal_gpio.c: 31:     return ret;
[e ) _ret ]
[e $UE 103  ]
"32
[; ;MCAL_Layer/GPIO/hal_gpio.c: 32: }
[e :UE 103 ]
}
"34
[; ;MCAL_Layer/GPIO/hal_gpio.c: 34: std_ReturnType gpio_pin_get_direction_status(const pin_config_t* pin_config, direction_t* direction_status)
[v _gpio_pin_get_direction_status `(uc ~T0 @X0 1 ef2`*CS102`*E1528 ]
"35
[; ;MCAL_Layer/GPIO/hal_gpio.c: 35: {
{
[e :U _gpio_pin_get_direction_status ]
"34
[; ;MCAL_Layer/GPIO/hal_gpio.c: 34: std_ReturnType gpio_pin_get_direction_status(const pin_config_t* pin_config, direction_t* direction_status)
[v _pin_config `*CS102 ~T0 @X0 1 r1 ]
[v _direction_status `*E1528 ~T0 @X0 1 r2 ]
"35
[; ;MCAL_Layer/GPIO/hal_gpio.c: 35: {
[f ]
"36
[; ;MCAL_Layer/GPIO/hal_gpio.c: 36:     std_ReturnType ret = (std_ReturnType)0X00;;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"37
[; ;MCAL_Layer/GPIO/hal_gpio.c: 37:     if ((((void*)0) == pin_config)||(((void*)0) == direction_status) || (pin_config->pin > 8 -1))
[e $ ! || || == -> -> -> 0 `i `*v `*CS102 _pin_config == -> -> -> 0 `i `*v `*E1528 _direction_status > -> . *U _pin_config 1 `i - -> 8 `i -> 1 `i 112  ]
"38
[; ;MCAL_Layer/GPIO/hal_gpio.c: 38:     {
{
"39
[; ;MCAL_Layer/GPIO/hal_gpio.c: 39:         ret = (std_ReturnType)0X00;;
[e = _ret -> -> 0 `i `uc ]
"40
[; ;MCAL_Layer/GPIO/hal_gpio.c: 40:     }
}
[e $U 113  ]
"41
[; ;MCAL_Layer/GPIO/hal_gpio.c: 41:     else
[e :U 112 ]
"42
[; ;MCAL_Layer/GPIO/hal_gpio.c: 42:     {
{
"43
[; ;MCAL_Layer/GPIO/hal_gpio.c: 43:         *direction_status = ((*tris_registers[pin_config->port] >> pin_config->pin) & (uint8)0x01);
[e = *U _direction_status -> & >> -> *U *U + &U _tris_registers * -> . *U _pin_config 0 `ux -> -> # *U &U _tris_registers `ui `ux `i -> . *U _pin_config 1 `i -> -> -> 1 `i `uc `i `E1528 ]
"44
[; ;MCAL_Layer/GPIO/hal_gpio.c: 44:         ret = (std_ReturnType)0X01;;
[e = _ret -> -> 1 `i `uc ]
"45
[; ;MCAL_Layer/GPIO/hal_gpio.c: 45:     }
}
[e :U 113 ]
"46
[; ;MCAL_Layer/GPIO/hal_gpio.c: 46:     return ret;
[e ) _ret ]
[e $UE 111  ]
"47
[; ;MCAL_Layer/GPIO/hal_gpio.c: 47: }
[e :UE 111 ]
}
"49
[; ;MCAL_Layer/GPIO/hal_gpio.c: 49: std_ReturnType gpio_pin_write_logic(const pin_config_t* pin_config, logic_t logic)
[v _gpio_pin_write_logic `(uc ~T0 @X0 1 ef2`*CS102`E1524 ]
"50
[; ;MCAL_Layer/GPIO/hal_gpio.c: 50: {
{
[e :U _gpio_pin_write_logic ]
"49
[; ;MCAL_Layer/GPIO/hal_gpio.c: 49: std_ReturnType gpio_pin_write_logic(const pin_config_t* pin_config, logic_t logic)
[v _pin_config `*CS102 ~T0 @X0 1 r1 ]
[v _logic `E1524 ~T0 @X0 1 r2 ]
"50
[; ;MCAL_Layer/GPIO/hal_gpio.c: 50: {
[f ]
"51
[; ;MCAL_Layer/GPIO/hal_gpio.c: 51:     std_ReturnType ret = (std_ReturnType)0X00;;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"52
[; ;MCAL_Layer/GPIO/hal_gpio.c: 52:     if ((((void*)0) == pin_config)|| (pin_config->pin > 8 -1))
[e $ ! || == -> -> -> 0 `i `*v `*CS102 _pin_config > -> . *U _pin_config 1 `i - -> 8 `i -> 1 `i 115  ]
"53
[; ;MCAL_Layer/GPIO/hal_gpio.c: 53:     {
{
"54
[; ;MCAL_Layer/GPIO/hal_gpio.c: 54:         ret = (std_ReturnType)0X00;;
[e = _ret -> -> 0 `i `uc ]
"55
[; ;MCAL_Layer/GPIO/hal_gpio.c: 55:     }
}
[e $U 116  ]
"56
[; ;MCAL_Layer/GPIO/hal_gpio.c: 56:     else
[e :U 115 ]
"57
[; ;MCAL_Layer/GPIO/hal_gpio.c: 57:     {
{
"58
[; ;MCAL_Layer/GPIO/hal_gpio.c: 58:         switch(logic)
[e $U 118  ]
"59
[; ;MCAL_Layer/GPIO/hal_gpio.c: 59:         {
{
"60
[; ;MCAL_Layer/GPIO/hal_gpio.c: 60:             case GPIO_LOW:
[e :U 119 ]
"61
[; ;MCAL_Layer/GPIO/hal_gpio.c: 61:                (*port_registers[pin_config->port] &= ~((uint8)0x01 << pin_config->pin));
[e =& *U *U + &U _port_registers * -> . *U _pin_config 0 `ux -> -> # *U &U _port_registers `ui `ux -> ~ << -> -> -> 1 `i `uc `i -> . *U _pin_config 1 `i `uc ]
"62
[; ;MCAL_Layer/GPIO/hal_gpio.c: 62:                ret = (std_ReturnType)0X01;;
[e = _ret -> -> 1 `i `uc ]
"63
[; ;MCAL_Layer/GPIO/hal_gpio.c: 63:                break;
[e $U 117  ]
"64
[; ;MCAL_Layer/GPIO/hal_gpio.c: 64:             case GPIO_HIGH:
[e :U 120 ]
"65
[; ;MCAL_Layer/GPIO/hal_gpio.c: 65:                 (*port_registers[pin_config->port] |= ((uint8)0x01 << pin_config->pin));
[e =| *U *U + &U _port_registers * -> . *U _pin_config 0 `ux -> -> # *U &U _port_registers `ui `ux -> << -> -> -> 1 `i `uc `i -> . *U _pin_config 1 `i `uc ]
"66
[; ;MCAL_Layer/GPIO/hal_gpio.c: 66:                 ret = (std_ReturnType)0X01;;
[e = _ret -> -> 1 `i `uc ]
"67
[; ;MCAL_Layer/GPIO/hal_gpio.c: 67:                 break;
[e $U 117  ]
"68
[; ;MCAL_Layer/GPIO/hal_gpio.c: 68:             default:
[e :U 121 ]
"69
[; ;MCAL_Layer/GPIO/hal_gpio.c: 69:                 ret = (std_ReturnType)0X00;;
[e = _ret -> -> 0 `i `uc ]
"70
[; ;MCAL_Layer/GPIO/hal_gpio.c: 70:         }
}
[e $U 117  ]
[e :U 118 ]
[e [\ -> _logic `ui , $ -> . `E1524 0 `ui 119
 , $ -> . `E1524 1 `ui 120
 121 ]
[e :U 117 ]
"71
[; ;MCAL_Layer/GPIO/hal_gpio.c: 71:     }
}
[e :U 116 ]
"72
[; ;MCAL_Layer/GPIO/hal_gpio.c: 72:     return ret;
[e ) _ret ]
[e $UE 114  ]
"73
[; ;MCAL_Layer/GPIO/hal_gpio.c: 73: }
[e :UE 114 ]
}
"75
[; ;MCAL_Layer/GPIO/hal_gpio.c: 75: std_ReturnType gpio_pin_read_logic(const pin_config_t* pin_config, logic_t* logic)
[v _gpio_pin_read_logic `(uc ~T0 @X0 1 ef2`*CS102`*E1524 ]
"76
[; ;MCAL_Layer/GPIO/hal_gpio.c: 76: {
{
[e :U _gpio_pin_read_logic ]
"75
[; ;MCAL_Layer/GPIO/hal_gpio.c: 75: std_ReturnType gpio_pin_read_logic(const pin_config_t* pin_config, logic_t* logic)
[v _pin_config `*CS102 ~T0 @X0 1 r1 ]
[v _logic `*E1524 ~T0 @X0 1 r2 ]
"76
[; ;MCAL_Layer/GPIO/hal_gpio.c: 76: {
[f ]
"77
[; ;MCAL_Layer/GPIO/hal_gpio.c: 77:     std_ReturnType ret = (std_ReturnType)0X00;;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"78
[; ;MCAL_Layer/GPIO/hal_gpio.c: 78:     if ((((void*)0) == pin_config)|| (((void*)0) == logic) || (pin_config->pin > 8 -1))
[e $ ! || || == -> -> -> 0 `i `*v `*CS102 _pin_config == -> -> -> 0 `i `*v `*E1524 _logic > -> . *U _pin_config 1 `i - -> 8 `i -> 1 `i 123  ]
"79
[; ;MCAL_Layer/GPIO/hal_gpio.c: 79:     {
{
"80
[; ;MCAL_Layer/GPIO/hal_gpio.c: 80:         ret = (std_ReturnType)0X00;;
[e = _ret -> -> 0 `i `uc ]
"81
[; ;MCAL_Layer/GPIO/hal_gpio.c: 81:     }
}
[e $U 124  ]
"82
[; ;MCAL_Layer/GPIO/hal_gpio.c: 82:     else
[e :U 123 ]
"83
[; ;MCAL_Layer/GPIO/hal_gpio.c: 83:     {
{
"84
[; ;MCAL_Layer/GPIO/hal_gpio.c: 84:         *logic = ((*port_registers[pin_config->port] >> pin_config->pin) & (uint8)0x01);
[e = *U _logic -> & >> -> *U *U + &U _port_registers * -> . *U _pin_config 0 `ux -> -> # *U &U _port_registers `ui `ux `i -> . *U _pin_config 1 `i -> -> -> 1 `i `uc `i `E1524 ]
"85
[; ;MCAL_Layer/GPIO/hal_gpio.c: 85:         ret = (std_ReturnType)0X01;;
[e = _ret -> -> 1 `i `uc ]
"86
[; ;MCAL_Layer/GPIO/hal_gpio.c: 86:     }
}
[e :U 124 ]
"87
[; ;MCAL_Layer/GPIO/hal_gpio.c: 87:     return ret;
[e ) _ret ]
[e $UE 122  ]
"88
[; ;MCAL_Layer/GPIO/hal_gpio.c: 88: }
[e :UE 122 ]
}
"91
[; ;MCAL_Layer/GPIO/hal_gpio.c: 91: std_ReturnType gpio_pin_toggle_logic(const pin_config_t* pin_config)
[v _gpio_pin_toggle_logic `(uc ~T0 @X0 1 ef1`*CS102 ]
"92
[; ;MCAL_Layer/GPIO/hal_gpio.c: 92: {
{
[e :U _gpio_pin_toggle_logic ]
"91
[; ;MCAL_Layer/GPIO/hal_gpio.c: 91: std_ReturnType gpio_pin_toggle_logic(const pin_config_t* pin_config)
[v _pin_config `*CS102 ~T0 @X0 1 r1 ]
"92
[; ;MCAL_Layer/GPIO/hal_gpio.c: 92: {
[f ]
"93
[; ;MCAL_Layer/GPIO/hal_gpio.c: 93:     std_ReturnType ret = (std_ReturnType)0X00;;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"94
[; ;MCAL_Layer/GPIO/hal_gpio.c: 94:     if ((((void*)0) == pin_config)|| (pin_config->pin > 8 -1))
[e $ ! || == -> -> -> 0 `i `*v `*CS102 _pin_config > -> . *U _pin_config 1 `i - -> 8 `i -> 1 `i 126  ]
"95
[; ;MCAL_Layer/GPIO/hal_gpio.c: 95:     {
{
"96
[; ;MCAL_Layer/GPIO/hal_gpio.c: 96:         ret = (std_ReturnType)0X00;;
[e = _ret -> -> 0 `i `uc ]
"97
[; ;MCAL_Layer/GPIO/hal_gpio.c: 97:     }
}
[e $U 127  ]
"98
[; ;MCAL_Layer/GPIO/hal_gpio.c: 98:     else
[e :U 126 ]
"99
[; ;MCAL_Layer/GPIO/hal_gpio.c: 99:     {
{
"100
[; ;MCAL_Layer/GPIO/hal_gpio.c: 100:         (*port_registers[pin_config->port] ^= ((uint8)0x01 << pin_config->pin));
[e =^ *U *U + &U _port_registers * -> . *U _pin_config 0 `ux -> -> # *U &U _port_registers `ui `ux -> << -> -> -> 1 `i `uc `i -> . *U _pin_config 1 `i `uc ]
"101
[; ;MCAL_Layer/GPIO/hal_gpio.c: 101:         ret = (std_ReturnType)0X01;;
[e = _ret -> -> 1 `i `uc ]
"102
[; ;MCAL_Layer/GPIO/hal_gpio.c: 102:     }
}
[e :U 127 ]
"103
[; ;MCAL_Layer/GPIO/hal_gpio.c: 103:     return ret;
[e ) _ret ]
[e $UE 125  ]
"104
[; ;MCAL_Layer/GPIO/hal_gpio.c: 104: }
[e :UE 125 ]
}
"107
[; ;MCAL_Layer/GPIO/hal_gpio.c: 107: std_ReturnType gpio_pin_initialize(const pin_config_t* pin_config)
[v _gpio_pin_initialize `(uc ~T0 @X0 1 ef1`*CS102 ]
"108
[; ;MCAL_Layer/GPIO/hal_gpio.c: 108: {
{
[e :U _gpio_pin_initialize ]
"107
[; ;MCAL_Layer/GPIO/hal_gpio.c: 107: std_ReturnType gpio_pin_initialize(const pin_config_t* pin_config)
[v _pin_config `*CS102 ~T0 @X0 1 r1 ]
"108
[; ;MCAL_Layer/GPIO/hal_gpio.c: 108: {
[f ]
"109
[; ;MCAL_Layer/GPIO/hal_gpio.c: 109:     std_ReturnType ret = (std_ReturnType)0X00;;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"110
[; ;MCAL_Layer/GPIO/hal_gpio.c: 110:     if ((((void*)0) == pin_config)|| (pin_config->pin > 8 -1))
[e $ ! || == -> -> -> 0 `i `*v `*CS102 _pin_config > -> . *U _pin_config 1 `i - -> 8 `i -> 1 `i 129  ]
"111
[; ;MCAL_Layer/GPIO/hal_gpio.c: 111:     {
{
"112
[; ;MCAL_Layer/GPIO/hal_gpio.c: 112:         ret = (std_ReturnType)0X00;;
[e = _ret -> -> 0 `i `uc ]
"113
[; ;MCAL_Layer/GPIO/hal_gpio.c: 113:     }
}
[e $U 130  ]
"114
[; ;MCAL_Layer/GPIO/hal_gpio.c: 114:     else
[e :U 129 ]
"115
[; ;MCAL_Layer/GPIO/hal_gpio.c: 115:     {
{
"116
[; ;MCAL_Layer/GPIO/hal_gpio.c: 116:         ret = gpio_pin_direction_initialize(pin_config);
[e = _ret ( _gpio_pin_direction_initialize (1 _pin_config ]
"117
[; ;MCAL_Layer/GPIO/hal_gpio.c: 117:         ret &= gpio_pin_write_logic(pin_config, pin_config->logic);
[e =& _ret -> ( _gpio_pin_write_logic (2 , _pin_config -> . *U _pin_config 2 `E1524 `uc ]
"118
[; ;MCAL_Layer/GPIO/hal_gpio.c: 118:     }
}
[e :U 130 ]
"119
[; ;MCAL_Layer/GPIO/hal_gpio.c: 119:     return ret;
[e ) _ret ]
[e $UE 128  ]
"120
[; ;MCAL_Layer/GPIO/hal_gpio.c: 120: }
[e :UE 128 ]
}
"124
[; ;MCAL_Layer/GPIO/hal_gpio.c: 124: std_ReturnType gpio_port_direction_initialize(port_index_t port, uint8 direction)
[v _gpio_port_direction_initialize `(uc ~T0 @X0 1 ef2`E1507`uc ]
"125
[; ;MCAL_Layer/GPIO/hal_gpio.c: 125: {
{
[e :U _gpio_port_direction_initialize ]
"124
[; ;MCAL_Layer/GPIO/hal_gpio.c: 124: std_ReturnType gpio_port_direction_initialize(port_index_t port, uint8 direction)
[v _port `E1507 ~T0 @X0 1 r1 ]
[v _direction `uc ~T0 @X0 1 r2 ]
"125
[; ;MCAL_Layer/GPIO/hal_gpio.c: 125: {
[f ]
"126
[; ;MCAL_Layer/GPIO/hal_gpio.c: 126:     std_ReturnType ret = (std_ReturnType)0X00;;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"127
[; ;MCAL_Layer/GPIO/hal_gpio.c: 127:     if(port > 5 -1)
[e $ ! > -> _port `ui -> - -> 5 `i -> 1 `i `ui 132  ]
"128
[; ;MCAL_Layer/GPIO/hal_gpio.c: 128:     {
{
"129
[; ;MCAL_Layer/GPIO/hal_gpio.c: 129:         ret = (std_ReturnType)0X00;;
[e = _ret -> -> 0 `i `uc ]
"130
[; ;MCAL_Layer/GPIO/hal_gpio.c: 130:     }
}
[e $U 133  ]
"131
[; ;MCAL_Layer/GPIO/hal_gpio.c: 131:     else
[e :U 132 ]
"132
[; ;MCAL_Layer/GPIO/hal_gpio.c: 132:     {
{
"133
[; ;MCAL_Layer/GPIO/hal_gpio.c: 133:         *tris_registers[port] = direction;
[e = *U *U + &U _tris_registers * -> _port `ux -> -> # *U &U _tris_registers `ui `ux _direction ]
"134
[; ;MCAL_Layer/GPIO/hal_gpio.c: 134:         ret = (std_ReturnType)0X01;;
[e = _ret -> -> 1 `i `uc ]
"135
[; ;MCAL_Layer/GPIO/hal_gpio.c: 135:     }
}
[e :U 133 ]
"136
[; ;MCAL_Layer/GPIO/hal_gpio.c: 136:     return ret;
[e ) _ret ]
[e $UE 131  ]
"137
[; ;MCAL_Layer/GPIO/hal_gpio.c: 137: }
[e :UE 131 ]
}
"139
[; ;MCAL_Layer/GPIO/hal_gpio.c: 139: std_ReturnType gpio_port_get_direction_status(port_index_t port, uint8* direction_status)
[v _gpio_port_get_direction_status `(uc ~T0 @X0 1 ef2`E1507`*uc ]
"140
[; ;MCAL_Layer/GPIO/hal_gpio.c: 140: {
{
[e :U _gpio_port_get_direction_status ]
"139
[; ;MCAL_Layer/GPIO/hal_gpio.c: 139: std_ReturnType gpio_port_get_direction_status(port_index_t port, uint8* direction_status)
[v _port `E1507 ~T0 @X0 1 r1 ]
[v _direction_status `*uc ~T0 @X0 1 r2 ]
"140
[; ;MCAL_Layer/GPIO/hal_gpio.c: 140: {
[f ]
"141
[; ;MCAL_Layer/GPIO/hal_gpio.c: 141:     std_ReturnType ret = (std_ReturnType)0X00;;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"142
[; ;MCAL_Layer/GPIO/hal_gpio.c: 142:     if((port > 5 -1) || (((void*)0) == direction_status))
[e $ ! || > -> _port `ui -> - -> 5 `i -> 1 `i `ui == -> -> -> 0 `i `*v `*uc _direction_status 135  ]
"143
[; ;MCAL_Layer/GPIO/hal_gpio.c: 143:     {
{
"144
[; ;MCAL_Layer/GPIO/hal_gpio.c: 144:         ret = (std_ReturnType)0X00;;
[e = _ret -> -> 0 `i `uc ]
"145
[; ;MCAL_Layer/GPIO/hal_gpio.c: 145:     }
}
[e $U 136  ]
"146
[; ;MCAL_Layer/GPIO/hal_gpio.c: 146:     else
[e :U 135 ]
"147
[; ;MCAL_Layer/GPIO/hal_gpio.c: 147:     {
{
"148
[; ;MCAL_Layer/GPIO/hal_gpio.c: 148:         *direction_status = *tris_registers[port];
[e = *U _direction_status *U *U + &U _tris_registers * -> _port `ux -> -> # *U &U _tris_registers `ui `ux ]
"149
[; ;MCAL_Layer/GPIO/hal_gpio.c: 149:         ret = (std_ReturnType)0X01;;
[e = _ret -> -> 1 `i `uc ]
"150
[; ;MCAL_Layer/GPIO/hal_gpio.c: 150:     }
}
[e :U 136 ]
"151
[; ;MCAL_Layer/GPIO/hal_gpio.c: 151:     return ret;
[e ) _ret ]
[e $UE 134  ]
"152
[; ;MCAL_Layer/GPIO/hal_gpio.c: 152: }
[e :UE 134 ]
}
"154
[; ;MCAL_Layer/GPIO/hal_gpio.c: 154: std_ReturnType gpio_port_write_logic(port_index_t port, uint8 logic)
[v _gpio_port_write_logic `(uc ~T0 @X0 1 ef2`E1507`uc ]
"155
[; ;MCAL_Layer/GPIO/hal_gpio.c: 155: {
{
[e :U _gpio_port_write_logic ]
"154
[; ;MCAL_Layer/GPIO/hal_gpio.c: 154: std_ReturnType gpio_port_write_logic(port_index_t port, uint8 logic)
[v _port `E1507 ~T0 @X0 1 r1 ]
[v _logic `uc ~T0 @X0 1 r2 ]
"155
[; ;MCAL_Layer/GPIO/hal_gpio.c: 155: {
[f ]
"156
[; ;MCAL_Layer/GPIO/hal_gpio.c: 156:     std_ReturnType ret = (std_ReturnType)0X00;;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"157
[; ;MCAL_Layer/GPIO/hal_gpio.c: 157:     if(port > 5 -1)
[e $ ! > -> _port `ui -> - -> 5 `i -> 1 `i `ui 138  ]
"158
[; ;MCAL_Layer/GPIO/hal_gpio.c: 158:     {
{
"159
[; ;MCAL_Layer/GPIO/hal_gpio.c: 159:         ret = (std_ReturnType)0X00;;
[e = _ret -> -> 0 `i `uc ]
"160
[; ;MCAL_Layer/GPIO/hal_gpio.c: 160:     }
}
[e $U 139  ]
"161
[; ;MCAL_Layer/GPIO/hal_gpio.c: 161:     else
[e :U 138 ]
"162
[; ;MCAL_Layer/GPIO/hal_gpio.c: 162:     {
{
"163
[; ;MCAL_Layer/GPIO/hal_gpio.c: 163:        *port_registers[port] = logic;
[e = *U *U + &U _port_registers * -> _port `ux -> -> # *U &U _port_registers `ui `ux _logic ]
"164
[; ;MCAL_Layer/GPIO/hal_gpio.c: 164:        ret = (std_ReturnType)0X01;;
[e = _ret -> -> 1 `i `uc ]
"165
[; ;MCAL_Layer/GPIO/hal_gpio.c: 165:     }
}
[e :U 139 ]
"166
[; ;MCAL_Layer/GPIO/hal_gpio.c: 166:     return ret;
[e ) _ret ]
[e $UE 137  ]
"167
[; ;MCAL_Layer/GPIO/hal_gpio.c: 167: }
[e :UE 137 ]
}
"169
[; ;MCAL_Layer/GPIO/hal_gpio.c: 169: std_ReturnType gpio_port_read_logic(port_index_t port, uint8* logic)
[v _gpio_port_read_logic `(uc ~T0 @X0 1 ef2`E1507`*uc ]
"170
[; ;MCAL_Layer/GPIO/hal_gpio.c: 170: {
{
[e :U _gpio_port_read_logic ]
"169
[; ;MCAL_Layer/GPIO/hal_gpio.c: 169: std_ReturnType gpio_port_read_logic(port_index_t port, uint8* logic)
[v _port `E1507 ~T0 @X0 1 r1 ]
[v _logic `*uc ~T0 @X0 1 r2 ]
"170
[; ;MCAL_Layer/GPIO/hal_gpio.c: 170: {
[f ]
"171
[; ;MCAL_Layer/GPIO/hal_gpio.c: 171:     std_ReturnType ret = (std_ReturnType)0X00;;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"172
[; ;MCAL_Layer/GPIO/hal_gpio.c: 172:     if((port > 5 -1) || (((void*)0) == logic))
[e $ ! || > -> _port `ui -> - -> 5 `i -> 1 `i `ui == -> -> -> 0 `i `*v `*uc _logic 141  ]
"173
[; ;MCAL_Layer/GPIO/hal_gpio.c: 173:     {
{
"174
[; ;MCAL_Layer/GPIO/hal_gpio.c: 174:         ret = (std_ReturnType)0X00;;
[e = _ret -> -> 0 `i `uc ]
"175
[; ;MCAL_Layer/GPIO/hal_gpio.c: 175:     }
}
[e $U 142  ]
"176
[; ;MCAL_Layer/GPIO/hal_gpio.c: 176:     else
[e :U 141 ]
"177
[; ;MCAL_Layer/GPIO/hal_gpio.c: 177:     {
{
"180
[; ;MCAL_Layer/GPIO/hal_gpio.c: 180:        *logic = *port_registers[port];
[e = *U _logic *U *U + &U _port_registers * -> _port `ux -> -> # *U &U _port_registers `ui `ux ]
"181
[; ;MCAL_Layer/GPIO/hal_gpio.c: 181:         ret = (std_ReturnType)0X01;;
[e = _ret -> -> 1 `i `uc ]
"182
[; ;MCAL_Layer/GPIO/hal_gpio.c: 182:     }
}
[e :U 142 ]
"183
[; ;MCAL_Layer/GPIO/hal_gpio.c: 183:     return ret;
[e ) _ret ]
[e $UE 140  ]
"184
[; ;MCAL_Layer/GPIO/hal_gpio.c: 184: }
[e :UE 140 ]
}
"186
[; ;MCAL_Layer/GPIO/hal_gpio.c: 186: std_ReturnType gpio_port_toggle_logic(port_index_t port)
[v _gpio_port_toggle_logic `(uc ~T0 @X0 1 ef1`E1507 ]
"187
[; ;MCAL_Layer/GPIO/hal_gpio.c: 187: {
{
[e :U _gpio_port_toggle_logic ]
"186
[; ;MCAL_Layer/GPIO/hal_gpio.c: 186: std_ReturnType gpio_port_toggle_logic(port_index_t port)
[v _port `E1507 ~T0 @X0 1 r1 ]
"187
[; ;MCAL_Layer/GPIO/hal_gpio.c: 187: {
[f ]
"188
[; ;MCAL_Layer/GPIO/hal_gpio.c: 188:     std_ReturnType ret = (std_ReturnType)0X00;;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"189
[; ;MCAL_Layer/GPIO/hal_gpio.c: 189:     if(port > 5 -1)
[e $ ! > -> _port `ui -> - -> 5 `i -> 1 `i `ui 144  ]
"190
[; ;MCAL_Layer/GPIO/hal_gpio.c: 190:     {
{
"191
[; ;MCAL_Layer/GPIO/hal_gpio.c: 191:         ret = (std_ReturnType)0X00;;
[e = _ret -> -> 0 `i `uc ]
"192
[; ;MCAL_Layer/GPIO/hal_gpio.c: 192:     }
}
[e $U 145  ]
"193
[; ;MCAL_Layer/GPIO/hal_gpio.c: 193:     else
[e :U 144 ]
"194
[; ;MCAL_Layer/GPIO/hal_gpio.c: 194:     {
{
"197
[; ;MCAL_Layer/GPIO/hal_gpio.c: 197:         *port_registers[port] ^= (uint8)0xFF;
[e =^ *U *U + &U _port_registers * -> _port `ux -> -> # *U &U _port_registers `ui `ux -> -> -> 255 `i `uc `uc ]
"198
[; ;MCAL_Layer/GPIO/hal_gpio.c: 198:         ret = (std_ReturnType)0X01;;
[e = _ret -> -> 1 `i `uc ]
"199
[; ;MCAL_Layer/GPIO/hal_gpio.c: 199:     }
}
[e :U 145 ]
"200
[; ;MCAL_Layer/GPIO/hal_gpio.c: 200:     return ret;
[e ) _ret ]
[e $UE 143  ]
"201
[; ;MCAL_Layer/GPIO/hal_gpio.c: 201: }
[e :UE 143 ]
}
